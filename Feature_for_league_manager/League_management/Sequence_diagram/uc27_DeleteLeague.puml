@startuml Delete League 
actor LeagueManager #Aquamarine
participant LeagueInfoScreen
participant LeagueController
participant LeagueService
participant MatchRepository
participant LeagueRepository
database SqlServer

activate LeagueManager
    LeagueManager -> LeagueInfoScreen: Click button delete and click yes on popup
    activate LeagueInfoScreen
        LeagueInfoScreen -> LeagueController: DeleteLeague(LeagueId)
        activate LeagueController
            LeagueController -> LeagueService: DeleteLeague(LeagueId, UserId)
            activate LeagueService
                LeagueService -> LeagueRepository: FindByLeagueId()
                activate LeagueRepository
                    LeagueRepository -> SqlServer: executeQuery()
                    activate SqlServer
                        SqlServer --> LeagueRepository: response
                    deactivate SqlServer
                    LeagueRepository --> LeagueService: response
                deactivate LeagueRepository
                alt League not exist
                    LeagueService --> LeagueController: return error code
                else League does not belong to user 
                    LeagueService --> LeagueController: return error code
                else Leagues that still has participants
                    LeagueService --> LeagueController: return error code
                else all condition valid 
                    group Delete league matches first
                        LeagueService -> MatchRepository: DeleteAsync(matches)
                        activate MatchRepository
                            MatchRepository -> SqlServer: executeUpdate(matches)
                            activate SqlServer
                                SqlServer --> MatchRepository: response
                            deactivate SqlServer
                            MatchRepository --> LeagueService: response
                        deactivate MatchRepository
                        alt Delete failed 
                            LeagueService --> LeagueController: return error code
                        else Delete success
                            LeagueService -> LeagueRepository: DeleteAsync(league)
                            activate LeagueRepository
                                LeagueRepository -> SqlServer: executeUpdate(league)
                                activate SqlServer
                                    SqlServer --> LeagueRepository: response
                                deactivate SqlServer
                                LeagueRepository --> LeagueService: response
                            deactivate LeagueRepository
                            alt Delete failed
                                LeagueService --> LeagueController: return error code
                            else Delete success
                                LeagueService --> LeagueController: response
                            end
                        end
                    end 
                end
            deactivate LeagueService
            LeagueController --> LeagueInfoScreen: return message
        deactivate LeagueController
        LeagueInfoScreen --> LeagueManager: Display message
    deactivate LeagueInfoScreen
deactivate LeagueManager
@enduml