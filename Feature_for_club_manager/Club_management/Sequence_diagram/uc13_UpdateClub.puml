@startuml Update Club
actor ClubManager #Aquamarine
participant UpdateClubScreen
participant ClubController
participant ClubService
participant ClubRepository
database SqlServer

activate ClubManager
    ClubManager -> UpdateClubScreen: input data
    activate UpdateClubScreen
        UpdateClubScreen -> ClubController: UpdateClub(UpdateClubRequest)
        activate ClubController
            ClubController -> ClubService: UpdateClub(request)
            activate ClubService
                ClubService -> ClubRepository: FindByClubId()
                activate ClubRepository
                    ClubRepository -> SqlServer: executeQuery()
                    activate SqlServer
                        SqlServer --> ClubRepository: response
                    deactivate SqlServer
                    ClubRepository -> ClubService: response
                deactivate ClubRepository
                alt Club not existed 
                    ClubService --> ClubController: return error code
                else Club existed
                    ClubService -> ClubRepository:  UpdateAsync(club)
                    activate ClubRepository
                        ClubRepository -> SqlServer: executeUpdate(club)
                        activate SqlServer
                            SqlServer --> ClubRepository: response
                        deactivate SqlServer
                        ClubRepository -> ClubService: response
                    deactivate ClubRepository
                    alt Update success 
                        ClubService --> ClubController: return success code
                    else Update failed
                        ClubService --> ClubController: return error code
                    end 
                end
            deactivate ClubService
            ClubController --> UpdateClubScreen: response
        deactivate ClubController
        UpdateClubScreen --> ClubManager: return message
    deactivate UpdateClubScreen
deactivate ClubManager
@enduml